.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "RUBY_ACTIVERECORD_MIGRATIONS" "1" "March 2011" "" ""
.
.SH "Methods:"
\fBcreate_table\fR(name, options)
.
.br
\fBdrop_table\fR(name)
.
.br
\fBrename_table\fR(old_name, new_name)
.
.br
\fBadd_column\fR(table_name, column_name, type, options)
.
.br
\fBrename_column\fR(table_name, column_name, new_column_name)
.
.br
\fBchange_column\fR(table_name, column_name, type, options)
.
.br
\fBremove_column\fR(table_name, column_name)
.
.br
\fBadd_index\fR(table_name, column_name, index_type)
.
.br
\fBremove_index\fR(table_name, column_name)
.
.br
.
.SH "Available Column Types:"
\fIinteger\fR
.
.br
\fIfloat\fR
.
.br
\fIdatetime\fR
.
.br
\fIdate\fR
.
.br
\fItimestamp\fR
.
.br
\fItime\fR
.
.br
\fItext\fR
.
.br
\fIstring\fR
.
.br
\fIbinary\fR
.
.br
\fIboolean\fR
.
.br
\fIdecimal\fR :precision :scale
.
.br
.
.SH "Valid Column Options:"
\fBlimit\fR
.
.br
\fBnull\fR (i\.e\. ":null => false" implies NOT NULL)
.
.br
\fBdefault\fR (to specify default values)
.
.br
\fB:decimal\fR, :precision => 8, :scale => 3
.
.br
.
.SH "Rake Tasks:"
\fBrake db:schema:dump\fR: run after you create a model to capture the schema\.rb
.
.br
\fBrake db:schema:import\fR: import the schema file into the current database (on error, check if your schema\.rb has ":force => true" on the create table statements
.
.br
\fB\./script/generate migration MigrationName\fR: generate a new migration with a new \'highest\' version (run \'\./script/generate migration\' for this info at your fingertips)
.
.br
\fBrake db:migrate\fR: migrate your current database to the most recent version
.
.br
\fBrake db:migrate VERSION=5\fR: migrate your current database to a specific version (in this case, version 5)
.
.br
\fBrake db:rollback\fR: migrate down one migration
.
.br
\fBrake db:rollback STEP=3\fR: migrate down three migrations
.
.br
\fBrake db:migrate RAILS_ENV=production\fR: migrate your production database
.
.br
.
.SH "SQL:"
Queries can be executed directly:
.
.br
execute \fI\'ALTER TABLE researchers ADD CONSTRAINT fk_researchers_departments FOREIGN KEY ( department_id ) REFERENCES departments( id )\'\fR
.
.br
.
.SH "Example Migration:"
.
.nf

class UpdateUsersAndCreateProducts < ActiveRecord::Migration
  def self\.up
    rename_column "users", "password", "hashed_password"
    remove_column "users", "email"

     User\.reset_column_information
     User\.find(:all)\.each{|u| #do something with u}

    create_table "products", :force => true do |t|
        t\.column "name", :text
        t\.column "description", :text
        t\.column "price", :decimal, :precision => 9, :scale => 2
    end

    #the rails 2\.0 way:
    create_table :people do |t|
      t\.integer :account_id
      t\.string  :first_name, :last_name, :null => false
      t\.text    :description
      t\.timestamps
    end
  end

  def self\.down
    rename_column "users", "hashed_password", "password"
    add_column "users", "email", :string
    drop_table "products"
  end
end
.
.fi
.
.SH "Find Highest version:<br />"
script/runner "puts ActiveRecord::Migrator\.current_version"
