.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "RUBY_AUTOTEST" "1" "March 2011" "" ""
If you want Autotest to start over from the top, hit ^C once\. If you want Autotest to quit, hit ^C twice\.
.
.SH "Rails:"
The autotest command will automatically discover a Rails directory by looking for config/environment\.rb\. When Rails is discovered, autotest uses RailsAutotest to perform file mappings and other work\. See RailsAutotest for details\.
.
.SH "Plugins:"
Plugins are available by creating a \.autotest file either in your project root or in your home directory\. You can then write event handlers in the form of:
.
.br
.
.P
\'Autotest\.add_hook hook_name { |autotest| \.\.\. }\'
.
.P
The available hooks are: initialize, run, run_command, ran_command,
.
.br
.
.P
\fBred, green, all_good, reset, interrupt, and quit\.\fR
.
.P
See example_dot_autotest\.rb for more details\.
.
.br
.
.SH "Naming:"
Autotest uses a simple naming scheme to figure out how to map implementation files to test files following the Test::Unit naming scheme\.
.
.IP "" 4
.
.nf

* Test files must be stored in test/
* Test files names must start with test_
* Test class names must start with Test
* Implementation files must be stored in lib/
* Implementation files must match up with a test file named test_\.*implementation\.rb
.
.fi
.
.IP "" 0
.
.SH "Strategy:"
.
.nf

 1\. Find all files and associate them from impl <\-> test\.
 2\. Run all tests\.
 3\. Scan for failures\.
 4\. Detect changes in ANY (ruby?\. file, rerun all failures + changed files\.
 5\. Until 0 defects, goto 3\.
 6\. When 0 defects, goto 2\.
.
.fi
.
.SH "Exclusions:"
.
.nf

Autotest\.add_hook :initialize do |at|
  at\.add_exception(coverage)
  at\.add_exception(vendor)
end
.
.fi

