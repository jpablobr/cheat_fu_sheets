emacs(1) -- Replace regexp
==========================

## EXAMPLES

     M-x replace-regexp <RET> c[ad]+r <RET> \&-safe <RET>

     M-x replace-regexp <RET> \(c[ad]+r\)-safe <RET> \1 <RET>

     [-+[:digit:]]                     digit or + or - sign
     \(\+\|-\)?[0-9]+\(\.[0-9]+\)?     decimal number (-2 or 1.5 but not .2 or 1.)
     \(\w+\) +\1\>                     two consecutive, identical words
     \<[[:upper:]]\w*                  word starting with an uppercase letter
      +$                               trailing whitespaces (note the starting SPC)
     \w\{20,\}                         word with 20 letters or more
     \w+phony\>                        word ending by phony
     \(19\|20\)[0-9]\{2\}              year 1900-2099
     ^.\{6,\}                          at least 6 symbols
     ^[a-zA-Z0-9_]\{3,16\}$            decent string for a user name
     <tag[^> C-q C-j ]*>\(.*?\)</tag>  html tag

## First line in buffer

     M-x replace-regexp <RET> ^ <RET> whatever <RET>

## Repeating our example to exchange ‘x’ and ‘y’, we can thus do it also this way:
     M-x replace-regexp <RET> \(x\)\|y <RET>
     \,(if \1 "y" "x") <RET>

## For computing replacement strings for ‘\,’, the format function is often
## useful (see Formatting Strings). For example, to add consecutively
## numbered strings like ‘ABC00042’ to columns 73 to 80 (unless they are
## already occupied), you can use

    M-x replace-regexp <RET> ^.\{0,72\}$ <RET>
     \,(format "%-72sABC%05d" \& \#) <RET>

## TIPS

    M-x re-builder

## LINKS

  * <http://www.gnu.org/software/emacs/manual/html_node/emacs/Regexp-Replace.html>
  * <http://www.gnu.org/software/emacs/manual/html_node/elisp/Formatting-Strings.html>
  * <http://www.gnu.org/software/emacs/elisp/html_node/Regexp-Search.html>
  * <http://emacsblog.org/2007/03/15/newbie-tip-re-builder/>
