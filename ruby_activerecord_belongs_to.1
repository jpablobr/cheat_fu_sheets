.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "RUBY_ACTIVERECORD_BELONGS_TO" "1" "July 2011" "" ""
.
.SH "Options:"
\fB:class_name\fR
.
.br
specify the class name of the association\. Use it only if that name can be inferred from the association name\. So \fIAuthor\fR class, but if the real class name is \fIPerson\fR, you have to specify it with this option\.
.
.br
.
.P
\fB:conditions\fR
.
.br
specify the conditions that the associated object must meet in order to be included as a \fI\e"WHERE\e"\fR sql fragment, such as \fI\e"authorized = 1\e"\fR\.
.
.br
.
.P
\fB:order\fR
.
.br
specify the order from which the associated object will be picked at the top\. Specified as an \fI\e"ORDER BY\e"\fR sql fragment, such as \fI\e"last_name, first_name DESC\e"\fR
.
.br
.
.P
\fB:foreign_key\fR
.
.br
specify the foreign key used for the association\. By default this is guessed to be the name of the associated class in lower\-case and \fI\e"_id\e"\fR suffixed\. So a Person class that makes a \fIbelongs_to\fR association to a Boss class will use \fI\e"boss_id\e"\fR as the default foreign_key\.
.
.br
.
.P
\fB:counter_cache\fR
.
.br
caches the number of belonging objects on the associate class through use of \fIincrement_counter\fR and \fIdecrement_counter\fR\. The counter cache is incremented when an object of this class is created and decremented when its destroyed\. This requires that a column named \fI\e"#{table_name}_count\e"\fR (such as \fIcomments_count\fR for a belonging \fIComment\fR class) is used on the associate class (such as a \fIPost\fR class)\. You can also specify a custom counter cache column by given that name instead of a <true/false> value to this option (e\.g\., <:counter_cache => :my_custom_counter>\.)
.
.br
.
.P
\fB:include\fR
.
.br
specify \fIsecond\-order\fR associations that should be eager loaded when this object is loaded\.
.
.br
.
.P
\fB:polymorphic\fR
.
.br
specify this association is a polymorphic association by passing true\.
.
.br

